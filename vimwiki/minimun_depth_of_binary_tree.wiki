== Minimum Depth of Binary Tree ==

 *Reference*
* https://leetcode.com/problems/minimum-depth-of-binary-tree/

 *题目要求*
* 找出二叉树中从根节点到叶子节点间的最短距离

 *关键点*
* 这一题首先要明白最终要找的节点的条件是其左右孩子皆为空。第一反应居然违反了这个原则。
* 用层序遍历合适

{{{
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) {
        if (root == NULL) return 0;
        queue<TreeNode*> que;
        que.push(root);
        que.push(NULL);
        int depth = 1;
        while(!que.empty())
        {
            TreeNode* node = que.front();
            que.pop();
            if (node == NULL) 
            {   
                que.push(NULL);
                depth++;
            }
            else
            {
                if (node->left == NULL && node->right == NULL) return depth;
                if (node->left != NULL) que.push(node->left);
                if (node->right != NULL) que.push(node->right);
            }
        }
    }
};
}}}
